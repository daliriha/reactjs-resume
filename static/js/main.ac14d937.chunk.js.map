{"version":3,"sources":["components/Fullpage.js","components/Arrow.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","sections/NavSection.js","sections/MainApp.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","Arrow","style","src","icon","TitleSection","data","title","subtitle","Object","keys","links","map","key","network","fgColor","bgColor","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","skillItem","up","NavSection","onClick","colorHandler","faEdit","MainApp","rand","Math","floor","random","setState","state","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac14d937.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={` fullpage ${this.props.className || \"\"}`}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Arrow = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        \"margin-top\": \"-70px\",\r\n        \"margin-bottom\": \"20px\",\r\n        \"text-align\": \"center\",\r\n        \"cursor\": \"pointer\"\r\n      }}\r\n    >\r\n      <img src={props.icon} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React, { Component } from \"react\";\r\n\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport Arrow from \"../components/Arrow\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./TitleSection.css\";\r\n\r\nclass TitleSection extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"section1\">\r\n          <h1>{data.title}</h1>\r\n          <h2>{data.subtitle}</h2>\r\n          <div>\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <SocialIcon\r\n                  network={key}\r\n                  className=\"icons\"\r\n                  fgColor=\"#fff\"\r\n                  bgColor=\"#000\"\r\n                  url={data.links[key]}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <Arrow icon={data.icons.down} />\r\n        </Link>\r\n        <Element name=\"about\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport Arrow from \"../components/Arrow\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./AboutSection.css\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Element name=\"about\" className=\"element\" />\r\n        <Fullpage className=\"section2\">\r\n          <h2>{data.sections[0].title}</h2>\r\n          <div>\r\n            {data.sections[0].items.map(p => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <Arrow icon={data.icons.down} />\r\n        </Link>\r\n        <Element name=\"skills\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h3>{skill.content.title}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from \"../data.json\";\r\nimport Arrow from \"../components/Arrow\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./SkillSection.css\";\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"section3\">\r\n          <h2>{data.sections[1].title}</h2>\r\n          <div className=\"cards-wrapper\">\r\n            {data.sections[1].items.map(skillItem => {\r\n              return <SkillCard skill={skillItem} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"top\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <Arrow icon={data.icons.up} />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link, Element } from \"react-scroll\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./NavSection.css\";\r\n\r\nclass NavSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"top-section\">\r\n          <div className=\"change-color\">\r\n            <a onClick = {this.props.colorHandler} >\r\n            <FontAwesomeIcon icon={faEdit} /> Change Color\r\n            </a>\r\n          </div>\r\n          <nav>\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={500}\r\n              delay={0}\r\n            >\r\n              About\r\n            </Link>\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"skills\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={500}\r\n              delay={0}\r\n            >\r\n              Skills\r\n            </Link>\r\n          </nav>\r\n        </div>\r\n        <Element name=\"top\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport TitleSection from \"./TitleSection\";\r\nimport AboutSection from \"./AboutSection\";\r\nimport SkillSection from \"./SkillSection\";\r\nimport NavSection from \"./NavSection\";\r\n\r\nimport \"./MainApp.css\";\r\n\r\nclass MainApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { random: 0 };\r\n  }\r\n  colorHandler = () => {\r\n    const min = 0;\r\n    const max = 4;\r\n    const rand = Math.floor(Math.random() * (max - min + 1) + min);\r\n    this.setState({ random: rand });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`App bg-theme-${this.state.random}`}>\r\n        <NavSection colorHandler={this.colorHandler} />\r\n        <TitleSection />\r\n        <AboutSection />\r\n        <SkillSection />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainApp;\r\n","import React, { Component } from \"react\";\n\nimport MainApp from \"./sections/MainApp\";\nimport SnowStorm from \"react-snowstorm\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainApp />\n        <SnowStorm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}